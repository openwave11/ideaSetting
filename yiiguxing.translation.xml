<application>
  <component name="AppStorage">
    <histories>
      <item value="The connection string contains an empty host '[]'." />
      <item value="org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time." />
      <item value=".1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time." />
      <item value="Error while fetching metadata with correlation id 26" />
      <item value="Configuration options: 'appendAssemblyId' is set to false, and 'classifier' is missing." />
      <item value="ARNING] The POM for com.fasterxml.jackson.core:jackson-databind:jar:2.7.6 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details" />
      <item value="The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access." />
      <item value="/** * Copy the property values of the given source bean into the target bean. * &lt;p&gt;Note: The source and target classes do not have to match or even be derived * from each other, as long as the properties match. Any bean properties that the * source bean exposes but the target bean does not will silently be ignored. * &lt;p&gt;This is just a convenience method. For more complex transfer needs, * consider using a full BeanWrapper. * @param source the source bean * @param target the target bean * @throws BeansException if the copying failed * @see BeanWrapper" />
      <item value="[C:\develop\IdeaProject\learning\xcEdu\xcEduService\xc-service-manage-course\target\classes\com\xuecheng\manage_course\dao\CategoryMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for com.xuecheng.manage_course.dao.CategoryMapper.mapper_resultMap[CategoryNodeMap]_collection[children]" />
      <item value="org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryController': Unsatisfied dependency expressed through field 'categoryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'categoryService': Unsatisfied dependency expressed through field 'categoryMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'categoryMapper' defined in file" />
      <item value="Result Maps collection already contains value for com.xuecheng.manage_course.dao.CategoryMapper.mapper_resultMap[CategoryNodeMap]_collection[children]" />
      <item value="org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseController': Unsatisfied dependency expressed through field 'courseService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseService': Unsatisfied dependency expressed through field 'teachPlanRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'teachPlanRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.xuecheng.framework.domain.course.ext.TeachplanNode com.xuecheng.manage_course.dao.TeachPlanRepository.findTeachPlanList(java.lang.String)! No property findTeachPlanList found for type TeachplanNode!" />
      <item value="channel" />
      <item value="deserialize" />
      <item value="definitions" />
      <item value="patterns" />
      <item value="Comma-separated list of view names (patterns allowed) that can be resolved." />
      <item value="org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: &quot;class path resource [templates/books.html]&quot;) at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241) ~[thymeleaf-3.0.11.RELEASE.jar:3.0.11.RELEASE]" />
      <item value="amount" />
      <item value="Amount" />
      <item value="select * FROM ACT_RU_EXECUTION WHERE ID_ = '1207505';" />
      <item value="nested exception is java.lang.IllegalArgumentException" />
      <item value="Error during artifact deployment. See server log for details." />
      <item value="Configuration factory class. * Used to create Configuration for loading deserialized unread properties." />
      <item value="Parses all the unprocessed statement nodes in the cache. It is recommended * to call this method once all the mappers are added as it provides fail-fast * statement validation." />
      <item value="identified" />
      <item value="deprecated" />
      <item value="suspended" />
      <item value="contain" />
      <item value="autor" />
      <item value="explicit" />
      <item value="smallest" />
      <item value="The smallest table capacity for which bins may be treeified. * (Otherwise the table is resized if too many nodes in a bin.) * Should be at least 4 * TREEIFY_THRESHOLD to avoid conflicts * between resizing and treeification thresholds." />
      <item value="This map usually acts as a binned (bucketed) hash table, but * when bins get too large, they are transformed into bins of * TreeNodes, each structured similarly to those in * java.util.TreeMap. Most methods try to use normal bins, but * relay to TreeNode methods when applicable (simply by checking * instanceof a node). Bins of TreeNodes may be traversed and * used like any others, but additionally support faster lookup * when overpopulated. However, since the vast majority of bins in * normal use are not overpopulated, checking for existence of * tree bins may be delayed in the course of table methods." />
      <item value="Fatal message conversion error; message rejected; it will be dropped or routed to a dead letter exchange" />
      <item value="absolute" />
      <item value="defining" />
      <item value="Consider" />
      <item value="Conditional Rejecting Error Handler$Default Exception Strategy" />
      <item value="conversion" />
      <item value="Example" />
      <item value="Conditional" />
      <item value="Unable to find main class" />
      <item value="Execution default of goal org.springframework.boot:spring-boot-maven-plugin:2.0.1.RELEASE:repackage failed: Unable to find main class" />
      <item value="Execution default of goal org.springframework.boot:spring-boot-maven-plugin" />
      <item value="The relative path of the parent &amp;lt;code&amp;gt;pom.xml&amp;lt;/code&amp;gt; file within the check out. The default value is &amp;lt;code&amp;gt;../pom.xml&amp;lt;/code&amp;gt;. Maven looks for the parent pom first in the reactor of currently building projects, then in this location on the filesystem, then the local repository, and lastly in the remote repo. &amp;lt;code&amp;gt;relativePath&amp;lt;/code&amp;gt; allows you to select a different location, for example when your structure is flat, or deeper without an intermediate parent pom. However, the group ID, artifact ID and version are still required, and must match the file in the location given or it will revert to the repository for the POM. This feature is only for enhancing the development in a local checkout of that project." />
      <item value="july" />
      <item value="Stack Overflow Error" />
      <item value="Transaction marked as rollbackOnly" />
      <item value="Illegal Argument Exception" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="202" />
        <entry key="ENGLISH" value="203" />
        <entry key="FRENCH" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="disableAppKeyNotification" value="true" />
    <option name="ignoreRegExp" value="" />
  </component>
</application>